- name: Configure Two-Node NAT task
  hosts: all
  become: true
  vars:
    vm1_external: "eth1"          # External NIC on VM1 (Router)
    vm1_internal: "eth2"          # Internal NIC on VM1 (Router)
    vm2_external: "eth1"          # External NIC on VM2 (Client)
    vm2_vbox: "eth0"              # VirtualBox NIC on VM2 (Client)
    gateway_ip: "192.168.99.101"  # Internal IP of VM1
    external_dns: "8.8.8.8"       # DNS to test connectivity

  tasks:
    - name: Ensure firewalld is installed
      zypper:
        name: firewalld
        state: present

    - name: Enable and start firewalld
      service:
        name: firewalld
        state: started
        enabled: true

    - name: Configure NAT on VM1
      when: inventory_hostname == "router"
      block:
        - name: Enable IP Forwarding
          sysctl:
            name: net.ipv4.ip_forward
            value: "1"
            state: present
            reload: true

        - name: Add external interface to public zone
          command: sudo firewall-cmd --permanent --zone=public --change-interface="{{ vm1_external }}"

        - name: Add internal interface to internal zone
          command: sudo firewall-cmd --permanent --zone=internal --change-interface="{{ vm1_internal }}"

        - name: Enable masquerading in public zone
          command: sudo firewall-cmd --zone=public --add-masquerade --permanent

        - name: Allow all traffic from internal (vm1_internal) to external (vm1_external)
          command: sudo firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i "{{ vm1_internal }}" -o "{{ vm1_external }}" -j ACCEPT

        - name: Allow return traffic for established connections from external (vm1_external) to internal (vm1_internal)
          command: sudo firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i "{{ vm1_external }}" -o "{{ vm1_internal }}" -m state --state RELATED,ESTABLISHED -j ACCEPT

        - name: Reload firewalld to apply changes
          command: sudo firewall-cmd --reload

    - name: Configure VM2 default gateway and disable external and vbox NICs
      when: inventory_hostname == "client"
      block:
        - name: Disable external NIC
          command: wicked ifdown "{{ vm2_external }}"

        - name: Disable vbox NIC
          command: wicked ifdown "{{ vm2_vbox }}"

        - name: Remove existing default gateway (if any)
          command: ip route del default
          ignore_errors: true

        - name: Set default gateway via VM1
          command: ip route add default via "{{ gateway_ip }}"

    - name: Test connectivity from VM2 to the internet
      when: inventory_hostname == "client"
      command: ping -c 5 "{{ external_dns }}"
      register: ping_test

    - name: Debug ping results
      debug:
        msg: "Ping test result: {{ ping_test.stdout_lines }}"
      when: 
        - inventory_hostname == "client"
        - ping_test is defined
